name: Deploy to Staging

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    branches: [main]
    types: [completed]

permissions:
  actions: read
  contents: write

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: write
      packages: read
    environment:
      name: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --tags

      - name: Generate staging version
        id: version
        run: |
          latest_staging=$(git tag --list 'v*-staging' --sort=-v:refname | head -n 1)

          if [[ -z "$latest_staging" ]]; then
            new_version="v0.1.0-staging"
          else
            version_part=$(echo $latest_staging | sed 's/-staging$//')
            major=$(echo $version_part | cut -d. -f1 | sed 's/v//')
            minor=$(echo $version_part | cut -d. -f2)
            patch=$(echo $version_part | cut -d. -f3)
            new_patch=$((patch + 1))
            new_version="v${major}.${minor}.${new_patch}-staging"
          fi

          echo "version=$new_version" >> $GITHUB_OUTPUT
          echo "Generated staging version: $new_version"

      - name: Create and push staging tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.version }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install skopeo
        run: |
          sudo apt-get update
          sudo apt-get install -y skopeo

      - name: Retag and push multi-arch images with skopeo
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          SRC_IMAGE="${DOCKER_USERNAME}/command-service:main-$(git rev-parse --short HEAD)"
          VERSION_TAG="${{ steps.version.outputs.version }}"
          STAGING_TAG="staging"

          mkdir -p ~/.docker
          echo "{\"auths\":{\"docker.io\":{\"username\":\"$DOCKER_USERNAME\",\"password\":\"$DOCKER_PASSWORD\"}}}" > ~/.docker/config.json

          skopeo copy --all docker://docker.io/$SRC_IMAGE docker://docker.io/${DOCKER_USERNAME}/command-service:$VERSION_TAG
          skopeo copy --all docker://docker.io/$SRC_IMAGE docker://docker.io/${DOCKER_USERNAME}/command-service:$STAGING_TAG

      - name: Clone infrastructure repo with GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone git@github.com:TodoFlow-Labs/command-service.git infra
          cd infra

          # Update image tag in Helm values file
          yq e ".commandService.image.tag = \"${{ steps.version.outputs.version }}\"" -i k8s/helm/todoflow/values-stage.yaml

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add k8s/helm/todoflow/values-stage.yaml
          git commit -m "Update commandService image tag to ${{ steps.version.outputs.version }}"
          git push origin main
